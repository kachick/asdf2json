name: CI
on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/ci.yml'
      - 'app/**'
      - 'scripts/**'
      - 'src/**'
      - 'test/**'
      - '**.cabal'
      - '**.nix'
  pull_request:
    paths:
      - '.github/workflows/ci.yml'
      - 'app/**'
      - 'scripts/**'
      - 'src/**'
      - 'test/**'
      - '**.cabal'
      - '**.nix'
  workflow_dispatch:

jobs:
  hspec:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v19
      # https://github.com/cachix/install-nix-action/blob/5c11eae19dba042788936d4f1c9685fdd814ac49/README.md?plain=1#L80-L85
      - name: Print nixpkgs version
        run: bash -c "nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'"
      - id: detect_nixpkgs
        name: Detect nixpkgs version
        run: bash -c echo '"nixpkgs_version=$(nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version' | tr -d '"')" | tee -a $GITHUB_OUTPUT'
      - uses: cachix/cachix-action@v12
        with:
          name: asdf2json
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-build
      - name: Print current versions
        run: |
          nix-shell --run '
            which ghc
            ghc --version
            which cabal
            cabal --version
            which stack
            stack --version
            dprint --version
            '
      - name: Cache cabal global
        id: cache-cabal-global
        uses: actions/cache@v3
        with:
          path: ~/.cabal
          key: ${{ runner.os }}-${{ steps.detect_nixpkgs.outputs.nixpkgs_version }}-cabal-global-${{ hashFiles('default.nix', '**.cabal') }}
      - name: Cache cabal local
        id: cache-cabal-local
        uses: actions/cache@v3
        with:
          path: dist-newstyle
          key: ${{ runner.os }}-${{ steps.detect_nixpkgs.outputs.nixpkgs_version }}-cabal-global-${{ hashFiles('default.nix', '**.cabal') }}
      - name: Cabal update
        if: steps.cache-cabal-global.outputs.cache-hit != 'true' || steps.cache-cabal-local.outputs.cache-hit != 'true'
        run: nix-shell --run 'cabal update'
      - run: nix-shell --run 'cabal test'
